
Introduction

	A web browser is an apllication that is used to retrieve, traverse and present information present in the world wide web. This information is usually present in the form of a web page. The web page is identified by the Uniform Resource Locator (URL), and is hosted on some server. A user connects to the server through internet, using the web browser and retrieves the web document. These web documents can be an html webpage, images, videos or other piece of content.
	The importance of web browser is increasing everyday. The use of web browser ranges from accessing the world wide web and viewing html pages, to playing games and making online transactions. Due to the imprtance of the world wide web and the increased usage statistics, the web browser has become one of the most accessed process/application in recent years.
	As the usage of the web browser increases, so is the rate at which it is targetted by the hackers and crackers. Statistics (http://hackmageddon.com/category/security/cyber-attacks-statistics/) show that about 30-40 % of the cyber vulnerabilities are browser based. Among them are the major ones like Cross site scripting, fingerprinting, Obfuscated Java code, etc.
	The browser application usually runs in normal user privelege mode on an operating system. Still the data that the browser has access to can potentially compromise the security of the whole system. These data include cookies, the local filesystem, saved passwords, browser history, etc. 
	When a user connects to a server, the browser and the server shares some pieces of information. This is required to negotiate the way communication will take place later. Sometimes the information that is shared to the server contains certain personal details. Details that will be specific to the user, like user history, type of operating system.  
	Collecting information about the victim is one of the major tasks that a hacker has to do before he could tailor the attack for that specific victim. Information that couild be leaked include technical information, browser specific data, user specific data, etc. These data might not be useful to normal users, but an attacker can use this data to exploit the user, system and the respective hosting network. For an overview of the information that could be leaked by just visiting a website, one can take a look at website www.stayinvisible.com. It runs a number of tests and then displays all the gathered information about ones computer. The details of this result is somewhat disturbing. Right from the browser one is using to the operating system, and even the fonts that the system uses. Basically, a hacker can lure a specific target to a Web site and collect enough information to prepare an attack.

background

	Browser security is the application of internet secuirty to the web browser. This aims at securing the data that is send through to the internet. As already mentioned the browser has access to number of personal data. There are many ways to pump up the security of your web browser. There are a plethora of plug-ins and extensions which help in protecting the user. They would encrypt all the data that is send out to the websites (HTTPS everywhere), try to check if the website being visited is known to be malicious or not (Web Of Trust), identify the redirects which a tinyurl is taking you to (Longurl.org), etc. But none work in the barebone level where the users personal data gets stolen.
	The problem with personal data being shared with the attacker is hard to detect, because of the way they are carried out. The attacker methods that are invisible to the user. The user doesnt even realize what data and information is being leaked by the browser to the internet world. 
	To prevent information leakage on the internet several methods have been employed. One such method proposes to inspect every network packet that is sent out. These packets are analysed and checked if they contain perosnal information. A predefined user control policy makes a decison if the packet is to be sent or it is to be discarded. Another method proposes to limit the access of a browser application. A layer seperates web services and users local resources. Whatevr the browser works on is local to its own application, thus the browser doesnt need to access anything outside to it. Another method prototyped a model which combines protected link or secure bookmark that authenticated their targets. The model also helps the user to bookmark legitimate sites by performing automatic bookmark integrity verification and whitelisting of allowed bookmarks. A website can learn what urls user has visited, this information can be used to guess surfing behavior of the user. 
	All these methods try to solve the problem of information leakage either by isolating the browser application, or by inspecting the network packets. Isolating the browser creates a problem. The user will not be able to save the downloads in any other folder, nor will he be able to upload files from any location. Inspecting each and every packets puts an added overhead in the process of packet forwarding. Moreover, all these methods work on the application layer above the operating system. Therefore they are considerably slow as compared to methods which us the  

	Browser is just another application that runs on the operating system. Just like other programs or applications browser also communicates with the operating sytsem using system calls. System calls are requests send to the operating system to perform a certain task. This task includes from reading/writing from/to a file, forking a process, making a connection, sending data through a socket connection, etc. Whatever work any application or a program needs to carry out, has to be done through the use of system calls. Therefore, the system calls that an application makes, and the parameters (information needed by the system calls and the information returned by the systemc calls) are essential to any security software. The way an application is behaving can be traced by intercepting these system calls and analysing the information.
	Tracing an application is the process of intercepting the system calls and its information. The process starts by attaching to a particular application, all the system calls of the application will now pass through the tracer program. The tracer program can analyse each system call before passing it to the operating system. After it is passed to the operating system then it can be executed and the result be returned to the application. Strace is a very famous tools that performs this process. It attaches itself to a process and displays all the system calls and its information. Underneath strace uses a system call called ptrace.
	
